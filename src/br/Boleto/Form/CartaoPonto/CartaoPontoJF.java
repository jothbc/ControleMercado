/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Boleto.Form.CartaoPonto;

import JDBC.ConnectionFactory;
import funcoes.CDbl;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.DAO.FeriadosBrasilDAO;
import model.DAO.funcionario.CartaoPontoDAO;
import model.DAO.funcionario.FuncionarioDAO;
import model.bean.CartaoPonto;
import model.bean.FeriadosBrasil;
import model.bean.Funcionario;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jonathan CR
 */
public class CartaoPontoJF extends javax.swing.JFrame {

    private Funcionario funcionario;
    private SpinnerNumberModel dia_spinner;
    private DefaultTableModel tb;
    private String jornadaString;
    private int reg = 0, reg_sub = 0;
    public static List<FeriadosBrasil> feriados;
    private final DefaultListModel lista_feriados = new DefaultListModel();
    private JFormattedTextField[] horarios;

    private long horas_extra_50, horas_extra_100, horas_faltas, horas_noturnas, horas_faltas_dsr;
    private static final int COLUNA_HORAS_TRABALHADAS = 7;
    private static final String CONST_FERIADO = "H";
    private static final String CONST_FALTA = "F";
    private static final int COLUNA_SAIDA_3 = 6;
    private static final int COLUNA_SAIDA_2 = 4;
    private static final int COLUNA_SAIDA_1 = 2;
    private static final double FATOR_REDUCAO_NOTURNO = 1.142857;

    /**
     * Creates new form frmLancarCartao2
     *
     * @param funcionario
     */
    public CartaoPontoJF(Funcionario funcionario) {
        initComponents();
        horarios = new JFormattedTextField[6];
        horarios[0] = txt_hora1;
        horarios[1] = txt_hora2;
        horarios[2] = txt_hora3;
        horarios[3] = txt_hora4;
        horarios[4] = txt_hora5;
        horarios[5] = txt_hora6;
        init(funcionario);
        this.setExtendedState(CartaoPontoJF.MAXIMIZED_BOTH);
    }

    public void init(Funcionario funcionario_) {
        //defini o funcionario
        funcionario = funcionario_;
        nomeLbl.setText(funcionario.getNome());
        //defini parametros iniciais de controle
        feriados = new ArrayList<>();
        jList1.setModel(lista_feriados);
        reg = -1;
        reg_sub = -1;
        //seta tabela
        jTable1.setDefaultRenderer(jTable1.getColumnClass(0), new cellRenderCartaoPonto());
        tb = (DefaultTableModel) jTable1.getModel();
        //seta data atual
        Calendar calendario = Calendar.getInstance();
        calendario.add(Calendar.MONTH, - 1);
        mes_slider.setValue(calendario.get(Calendar.MONTH) + 1);
        ano_spinner.setValue(calendario.get(Calendar.YEAR));
        //seta variaveis slider e spinner
        dia_spinner = (SpinnerNumberModel) jSpinnerDia.getModel();
        dia_spinner.setValue(1);
        //defini foco
        txt_hora1.requestFocus();
        //grupo de botoes de jornada
        buttonGroup1.add(jornada6);
        buttonGroup1.add(jornada7);
        buttonGroup1.add(jornada5);
        //seta jornada
        jornada7.setSelected(true);
        jornadaString = "07:20";
        alterar_mes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ano_spinner = new javax.swing.JSpinner();
        mes_slider = new javax.swing.JSlider();
        mestxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_hora1 = new javax.swing.JFormattedTextField();
        txt_hora2 = new javax.swing.JFormattedTextField();
        txt_hora3 = new javax.swing.JFormattedTextField();
        txt_hora4 = new javax.swing.JFormattedTextField();
        txt_hora5 = new javax.swing.JFormattedTextField();
        txt_hora6 = new javax.swing.JFormattedTextField();
        jSpinnerDia = new javax.swing.JSpinner();
        sabadoBtn = new javax.swing.JButton();
        domingoBtn = new javax.swing.JButton();
        folgaBtn = new javax.swing.JButton();
        feriadoBtn = new javax.swing.JButton();
        atestadoBtn = new javax.swing.JButton();
        faltaBtn = new javax.swing.JButton();
        limpaDiaBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jornada6 = new javax.swing.JRadioButton();
        jornada7 = new javax.swing.JRadioButton();
        jornada5 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        nomeLbl = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_horas_extras_50 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_horas_faltas = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_horas_noturnas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_reducao_noturno = new javax.swing.JTextField();
        txt_horas_extras_100 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_horas_faltas_dsr = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        concluirBtn = new javax.swing.JButton();
        imprimirBtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_pdf_export = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cart√£o Ponto");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        ano_spinner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ano_spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ano_spinnerStateChanged(evt);
            }
        });

        mes_slider.setBackground(new java.awt.Color(153, 153, 153));
        mes_slider.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        mes_slider.setForeground(new java.awt.Color(0, 0, 0));
        mes_slider.setMajorTickSpacing(1);
        mes_slider.setMaximum(12);
        mes_slider.setMinimum(1);
        mes_slider.setMinorTickSpacing(1);
        mes_slider.setPaintLabels(true);
        mes_slider.setPaintTicks(true);
        mes_slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mes_sliderMouseClicked(evt);
            }
        });
        mes_slider.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mes_sliderKeyPressed(evt);
            }
        });

        mestxt.setText("Mes");

        jLabel1.setText("Ano");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(mes_slider, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addComponent(ano_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(mestxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mestxt)
                    .addComponent(jLabel1))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(mes_slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ano_spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Entrada", "S. Intervalo", "E. Intervalo", "Saida", "Entrada", "Saida", "Horas Trabalhadas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        try {
            txt_hora1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora1KeyPressed(evt);
            }
        });

        try {
            txt_hora2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora2.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora2KeyPressed(evt);
            }
        });

        try {
            txt_hora3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora3.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora3KeyPressed(evt);
            }
        });

        try {
            txt_hora4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora4.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hora4ActionPerformed(evt);
            }
        });
        txt_hora4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora4KeyPressed(evt);
            }
        });

        try {
            txt_hora5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora5.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora5KeyPressed(evt);
            }
        });

        try {
            txt_hora6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_hora6.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_hora6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora6KeyPressed(evt);
            }
        });

        jSpinnerDia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerDiaStateChanged(evt);
            }
        });

        sabadoBtn.setText("S: S√°bado");
        sabadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sabadoBtnActionPerformed(evt);
            }
        });

        domingoBtn.setText("D: Domingo");
        domingoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domingoBtnActionPerformed(evt);
            }
        });

        folgaBtn.setText("R: Folga");
        folgaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folgaBtnActionPerformed(evt);
            }
        });

        feriadoBtn.setText("H: Feriado");
        feriadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feriadoBtnActionPerformed(evt);
            }
        });

        atestadoBtn.setText("A: Atestado");
        atestadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atestadoBtnActionPerformed(evt);
            }
        });

        faltaBtn.setText("F: Falta");
        faltaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faltaBtnActionPerformed(evt);
            }
        });

        limpaDiaBtn.setText("Limpar Dia");
        limpaDiaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaDiaBtnActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Jornada"));

        jornada6.setBackground(new java.awt.Color(255, 255, 255));
        jornada6.setText("06:00");
        jornada6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jornada6MouseClicked(evt);
            }
        });
        jornada6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada6ActionPerformed(evt);
            }
        });

        jornada7.setBackground(new java.awt.Color(255, 255, 255));
        jornada7.setText("07:20");
        jornada7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada7ActionPerformed(evt);
            }
        });

        jornada5.setBackground(new java.awt.Color(255, 255, 255));
        jornada5.setText("05:20");
        jornada5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jornada7)
                    .addComponent(jornada5)
                    .addComponent(jornada6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jornada5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jornada6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jornada7))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Estat√≠stica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        nomeLbl.setEditable(false);
        nomeLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nomeLbl.setFocusable(false);

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Calculo Folha"));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Horas Extras 50%");

        txt_horas_extras_50.setEditable(false);
        txt_horas_extras_50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Horas Faltas");

        txt_horas_faltas.setEditable(false);
        txt_horas_faltas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Horas Noturnas");

        txt_horas_noturnas.setEditable(false);
        txt_horas_noturnas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Redu√ß√£o Horas Noturno");

        txt_reducao_noturno.setEditable(false);
        txt_reducao_noturno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txt_horas_extras_100.setEditable(false);
        txt_horas_extras_100.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Horas Extras 100%");

        txt_horas_faltas_dsr.setEditable(false);
        txt_horas_faltas_dsr.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("DSR Horas Faltas");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_horas_noturnas)
            .addComponent(txt_reducao_noturno)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_horas_faltas, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(txt_horas_extras_50, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(txt_horas_extras_100)
                    .addComponent(txt_horas_faltas_dsr)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_extras_50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_extras_100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_faltas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_faltas_dsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(txt_horas_noturnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(0, 0, 0)
                .addComponent(txt_reducao_noturno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Feriados"));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nomeLbl)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(nomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4))
        );

        concluirBtn.setText("Concluir");
        concluirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concluirBtnActionPerformed(evt);
            }
        });

        imprimirBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/printer.png"))); // NOI18N
        imprimirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirBtnActionPerformed(evt);
            }
        });

        editbtn.setText("Editar");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Dia Corrente");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btn_pdf_export.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_white_acrobat.png"))); // NOI18N
        btn_pdf_export.setText("PDF");
        btn_pdf_export.setToolTipText("Cart√£o Fict√≠cio");
        btn_pdf_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pdf_exportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_hora1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_hora2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(txt_hora3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(txt_hora4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_hora5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_hora6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(limpaDiaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domingoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imprimirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sabadoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(folgaBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(feriadoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(atestadoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(faltaBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(concluirBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn_pdf_export, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(editbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSpinnerDia, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_hora1)
                                        .addComponent(txt_hora2)
                                        .addComponent(txt_hora3)
                                        .addComponent(txt_hora4)
                                        .addComponent(txt_hora5)
                                        .addComponent(txt_hora6)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_pdf_export)
                                .addGap(36, 36, 36)
                                .addComponent(editbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sabadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(domingoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(folgaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(feriadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atestadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(faltaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpaDiaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imprimirBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(concluirBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ano_spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ano_spinnerStateChanged
        alterar_dias();
        obter_cartao_lancado();
    }//GEN-LAST:event_ano_spinnerStateChanged

    private void txt_hora1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora1KeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_D:
                domingoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_S:
                sabadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_R:
                folgaBtnActionPerformed(null);
                break;
            case KeyEvent.VK_F:
                faltaBtnActionPerformed(null);
                break;
            case KeyEvent.VK_H:
                feriadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_A:
                atestadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_ENTER:
                txt_hora2.requestFocus();
                break;
        }
    }//GEN-LAST:event_txt_hora1KeyPressed

    private void txt_hora2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_hora1.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hora3.requestFocus();
        }
    }//GEN-LAST:event_txt_hora2KeyPressed

    private void txt_hora3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora3KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_hora2.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hora4.requestFocus();
        }
    }//GEN-LAST:event_txt_hora3KeyPressed

    private void txt_hora4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora4KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (lancar_dia()) {
                calcular_horas();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_hora3.requestFocus();
        }
    }//GEN-LAST:event_txt_hora4KeyPressed

    private void txt_hora5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora5KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_hora4.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hora6.requestFocus();
        }
    }//GEN-LAST:event_txt_hora5KeyPressed

    private void txt_hora6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora6KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (lancar_dia()) {
                calcular_horas();
            }
        } else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_hora5.requestFocus();
        }
    }//GEN-LAST:event_txt_hora6KeyPressed

    private void jSpinnerDiaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerDiaStateChanged

    }//GEN-LAST:event_jSpinnerDiaStateChanged

    private void sabadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sabadoBtnActionPerformed
        jTable1.setValueAt("S", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_sabadoBtnActionPerformed

    private void domingoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domingoBtnActionPerformed
        jTable1.setValueAt("D", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_domingoBtnActionPerformed

    private void folgaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folgaBtnActionPerformed
        jTable1.setValueAt("R", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_folgaBtnActionPerformed

    private void feriadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feriadoBtnActionPerformed
        jTable1.setValueAt("H", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_feriadoBtnActionPerformed

    private void atestadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atestadoBtnActionPerformed
        jTable1.setValueAt("A", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_atestadoBtnActionPerformed

    private void faltaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faltaBtnActionPerformed
        jTable1.setValueAt("F", (int) dia_spinner.getValue() - 1, 0);
        if (lancar_dia()) {
            calcular_horas();
        }
    }//GEN-LAST:event_faltaBtnActionPerformed

    private void limpaDiaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaDiaBtnActionPerformed
        Calendar calendario = Calendar.getInstance();
        calendario.set(Calendar.YEAR, (int) ano_spinner.getValue());
        calendario.set(Calendar.MONTH, mes_slider.getValue() - 1);
        calendario.set(Calendar.DAY_OF_MONTH, (int) dia_spinner.getValue());
        if (calendario.get(Calendar.DAY_OF_WEEK) == 1) { //se for domingo
            tb.setValueAt("D", (int) dia_spinner.getValue() - 1, 0);
        } else {
            tb.setValueAt((int) dia_spinner.getValue(), (int) dia_spinner.getValue() - 1, 0);
        }
        for (int column = 1; column < 8; column++)
            tb.setValueAt(null, (int) dia_spinner.getValue() - 1, column);
    }//GEN-LAST:event_limpaDiaBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        dia_spinner.setValue(jTable1.getSelectedRow() + 1);
        txt_hora1.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 1));
        txt_hora2.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 2));
        txt_hora3.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 3));
        txt_hora4.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 4));
        txt_hora5.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 5));
        txt_hora6.setText((String) jTable1.getValueAt(jTable1.getSelectedRow(), 6));
        txt_hora1.requestFocus();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jornada6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jornada6MouseClicked
    }//GEN-LAST:event_jornada6MouseClicked

    private void jornada7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada7ActionPerformed
        jornadaString = "07:20";
        calcular_horas();
    }//GEN-LAST:event_jornada7ActionPerformed

    private void jornada6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada6ActionPerformed
        jornadaString = "06:00";
        calcular_horas();
    }//GEN-LAST:event_jornada6ActionPerformed

    private void txt_hora4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hora4ActionPerformed
    }//GEN-LAST:event_txt_hora4ActionPerformed

    private void concluirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concluirBtnActionPerformed
        salvar();
    }//GEN-LAST:event_concluirBtnActionPerformed

    private void imprimirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirBtnActionPerformed
        imprimir(true,false);
    }//GEN-LAST:event_imprimirBtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        alterar_status_visible_btns(false);
    }//GEN-LAST:event_editbtnActionPerformed

    private void jornada5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada5ActionPerformed
        jornadaString = "05:20";
        calcular_horas();
    }//GEN-LAST:event_jornada5ActionPerformed

    private void btn_pdf_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pdf_exportActionPerformed
        imprimir(false,true);
    }//GEN-LAST:event_btn_pdf_exportActionPerformed

    private void mes_sliderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mes_sliderMouseClicked
        alterar_mes();
        alterar_dias();
        obter_cartao_lancado();
    }//GEN-LAST:event_mes_sliderMouseClicked

    private void mes_sliderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mes_sliderKeyPressed
        alterar_mes();
        alterar_dias();
        obter_cartao_lancado();
    }//GEN-LAST:event_mes_sliderKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartaoPontoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartaoPontoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartaoPontoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartaoPontoJF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartaoPontoJF(new FuncionarioDAO().getFuncionario(2)).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ano_spinner;
    private javax.swing.JButton atestadoBtn;
    private javax.swing.JButton btn_pdf_export;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton concluirBtn;
    private javax.swing.JButton domingoBtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton faltaBtn;
    private javax.swing.JButton feriadoBtn;
    private javax.swing.JButton folgaBtn;
    private javax.swing.JButton imprimirBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinnerDia;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton jornada5;
    private javax.swing.JRadioButton jornada6;
    private javax.swing.JRadioButton jornada7;
    private javax.swing.JButton limpaDiaBtn;
    private javax.swing.JSlider mes_slider;
    private javax.swing.JLabel mestxt;
    private javax.swing.JTextField nomeLbl;
    private javax.swing.JButton sabadoBtn;
    private javax.swing.JFormattedTextField txt_hora1;
    private javax.swing.JFormattedTextField txt_hora2;
    private javax.swing.JFormattedTextField txt_hora3;
    private javax.swing.JFormattedTextField txt_hora4;
    private javax.swing.JFormattedTextField txt_hora5;
    private javax.swing.JFormattedTextField txt_hora6;
    private javax.swing.JTextField txt_horas_extras_100;
    private javax.swing.JTextField txt_horas_extras_50;
    private javax.swing.JTextField txt_horas_faltas;
    private javax.swing.JTextField txt_horas_faltas_dsr;
    private javax.swing.JTextField txt_horas_noturnas;
    private javax.swing.JTextField txt_reducao_noturno;
    // End of variables declaration//GEN-END:variables

    private void alterar_mes() {
        lista_feriados.removeAllElements();
        feriados = new FeriadosBrasilDAO().getFeriadosDoMes(mes_slider.getValue(), (int) ano_spinner.getValue());
        lista_feriados.addAll(feriados);
        switch (mes_slider.getValue()) {
            case 1:
                mestxt.setText("Janeiro");
                break;
            case 2:
                mestxt.setText("Fevereiro");
                break;
            case 3:
                mestxt.setText("Mar√ßo");
                break;
            case 4:
                mestxt.setText("Abril");
                break;
            case 5:
                mestxt.setText("Maio");
                break;
            case 6:
                mestxt.setText("Junho");
                break;
            case 7:
                mestxt.setText("Julho");
                break;
            case 8:
                mestxt.setText("Agosto");
                break;
            case 9:
                mestxt.setText("Setembro");
                break;
            case 10:
                mestxt.setText("Outubro");
                break;
            case 11:
                mestxt.setText("Novembro");
                break;
            case 12:
                mestxt.setText("Dezembro");
                break;
        }
    }

    private void alterar_dias() {
        Calendar calendario = Calendar.getInstance();
        calendario.set(Calendar.YEAR, (int) ano_spinner.getValue());
        calendario.set(Calendar.MONTH, mes_slider.getValue() - 1);
        int ultimo_dia_mes = calendario.getActualMaximum(Calendar.DAY_OF_MONTH);
        tb.setRowCount(ultimo_dia_mes);
        for (int dia = 1; dia < ultimo_dia_mes + 1; dia++) {
            calendario.set(Calendar.DAY_OF_MONTH, dia);
            if (calendario.get(Calendar.DAY_OF_WEEK) == 1) { //se for domingo
                tb.setValueAt("D", dia - 1, 0);
            } else {
                tb.setValueAt(dia, dia - 1, 0);
            }
        }
    }

    private boolean lancar_dia() {
        if ((int) dia_spinner.getValue() > jTable1.getRowCount()) {
            return false;
        }
        for (int x = 0; x < horarios.length; x++) {
            if (hora_valida(horarios[x].getText())) {
                if (horarios[x].getText().equals("  :  ")) {
                    jTable1.setValueAt(null, ((int) dia_spinner.getValue() - 1), x + 1);
                } else {
                    jTable1.setValueAt(horarios[x].getText(), ((int) dia_spinner.getValue() - 1), x + 1);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Algum valor esta errado.");
                return false;
            }
        }
        dia_spinner.setValue((int) dia_spinner.getValue() + 1);
        txt_hora1.setText("");
        txt_hora2.setText("");
        txt_hora3.setText("");
        txt_hora4.setText("");
        txt_hora5.setText("");
        txt_hora6.setText("");
        txt_hora1.requestFocus();
        return true;
    }

    private boolean hora_valida(String test) {
        if (test.equals("  :  ")) {
            return true;
        }
        String[] time = test.split(":");
        try {
            Calendar calendario = Calendar.getInstance();
            calendario.set(Calendar.HOUR_OF_DAY, Integer.parseInt(time[0]));
            calendario.set(Calendar.MINUTE, Integer.parseInt(time[1]));
            return true;
        } catch (NumberFormatException e) {
            System.err.println(e);
            return false;
        }
    }

    private void calcular_horas() {
        horas_extra_50 = 0;
        horas_extra_100 = 0;
        horas_faltas = 0;
        horas_noturnas = 0;
        Calendar[] time;

        for (int index = 0; index < jTable1.getRowCount(); index++) {
            //obtem todos os tempos
            time = obterTimeLinhaJTable(index);
            //obtem as horas trabalhadas em miles
            Long horas_trab_miles = horas_trabalhadas_miles(time);
            //seta jtable
            jTable1.setValueAt(milesToHoraString(horas_trab_miles), index, COLUNA_HORAS_TRABALHADAS);

            Calendar horas_trabalhadas = milesToCalendar(horas_trab_miles);
            //Horas extras
            if (horas_trabalhadas.after(getJornadaCalendar())) {

                //Horas Extras noturnas
                long hor_noturno_miles = getHorasExtrasNoturnas(time, index);

                //se linha atual for marcado como Feriado entao hora extra de 100%
                if (String.valueOf(jTable1.getValueAt(index, 0)).equals(CONST_FERIADO)) {
                    horas_extra_100 += (horas_trabalhadas.getTimeInMillis() - getJornadaCalendar().getTimeInMillis()) - hor_noturno_miles;
                } else {
                    horas_extra_50 += (horas_trabalhadas.getTimeInMillis() - getJornadaCalendar().getTimeInMillis()) - hor_noturno_miles;
                }
                if (hor_noturno_miles > 0) {
                    horas_noturnas += hor_noturno_miles;
                }

            } //Horas Faltas
            if (horas_trabalhadas.before(getJornadaCalendar())) {
                //HORAS Faltas s√≥ contabiliza se no cart√£o o dia for FALTA ou tiver mais de 1 minuto trabalhado no dia
                //esse controle de minuto se refere ao tempo que o processador demora para fazer o calculo, dependendo do processador
                //vai retornar alguns milisegundos, sendo assim esse tempo gasto no processamento nao pode afetar o calculo.
                //por isso o controle de tempo >60000, no caso a diferen√ßa de tempo tem que ser maior que 1 minuto.
                if (String.valueOf(jTable1.getValueAt(index, 0)).equals(CONST_FALTA)
                        || horas_trab_miles > 60000) {
                    horas_faltas += getJornadaCalendar().getTimeInMillis() - horas_trabalhadas.getTimeInMillis();
                }
            }
        }
        CalcularHorasFaltasDSR();
        txt_horas_extras_100.setText(milesToHoraString(horas_extra_100));
        txt_horas_extras_50.setText(milesToHoraString(horas_extra_50));
        txt_horas_noturnas.setText(milesToHoraString(horas_noturnas));
        txt_reducao_noturno.setText(Double.toString(obterReducaoNoturno(milesToHoraString(horas_noturnas))));
        txt_horas_faltas.setText(milesToHoraString(horas_faltas));
    }

    private Calendar[] obterTimeLinhaJTable(int index) {
        Calendar[] time = new Calendar[horarios.length];
        for (int x = 0; x < time.length; x++) {
            time[x] = Calendar.getInstance();
            String time_string;
            String[] split_time;
            if (jTable1.getValueAt(index, x + 1) != null) {
                time_string = (String) jTable1.getValueAt(index, x + 1);
                split_time = time_string.split(":");
            } else {
                split_time = "00:00".split(":");
            }
            time[x].set(Calendar.HOUR_OF_DAY, 0);
            time[x].set(Calendar.MINUTE, 0);
            time[x].set(Calendar.SECOND, 0);
            //se a pessoa colocar 25 HORAS o calendar passa para o proximo dia
            time[x].add(Calendar.HOUR_OF_DAY, Integer.parseInt(split_time[0]));
            time[x].add(Calendar.MINUTE, Integer.parseInt(split_time[1]));
        }
        return time;
    }

    private long horas_trabalhadas_miles(Calendar[] time) {
        Long entradas_miles = time[0].getTimeInMillis() + time[2].getTimeInMillis() + time[4].getTimeInMillis();
        Long saidas_miles = time[1].getTimeInMillis() + time[3].getTimeInMillis() + time[5].getTimeInMillis();
        return saidas_miles - entradas_miles;
    }

    private String calendarToHorasString(Calendar horas_calendar) {
        String hour = horas_calendar.get(Calendar.HOUR_OF_DAY) >= 10 ? Integer.toString(horas_calendar.get(Calendar.HOUR_OF_DAY)) : "0" + Integer.toString(horas_calendar.get(Calendar.HOUR_OF_DAY));
        String min = horas_calendar.get(Calendar.MINUTE) >= 10 ? Integer.toString(horas_calendar.get(Calendar.MINUTE)) : "0" + Integer.toString(horas_calendar.get(Calendar.MINUTE));
        return hour + ":" + min;
    }

    private Calendar getJornadaCalendar() {
        String[] jornada_split = jornadaString.split(":");
        Calendar jornada_calendar = Calendar.getInstance();
        jornada_calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(jornada_split[0]));
        jornada_calendar.set(Calendar.MINUTE, Integer.parseInt(jornada_split[1]));
        jornada_calendar.set(Calendar.SECOND, 0);
        return jornada_calendar;
    }

    private String milesToHoraString(Long miles) {
        Calendar calendario = Calendar.getInstance();
        /*
            Caso a quantidade de tempo ultrapasse 1 Dia, ent√£o deve retornar com o valor total somado:
            Ex: 25:00, 72:00....
         */
        int controle_dia = calendario.get(Calendar.DAY_OF_YEAR);
        calendario.set(Calendar.HOUR_OF_DAY, 0);
        calendario.set(Calendar.MINUTE, 0);
        calendario.set(Calendar.SECOND, 0);
        calendario.setTimeInMillis(calendario.getTimeInMillis() + miles);
        if (calendario.get(Calendar.DAY_OF_YEAR) > controle_dia) {
            String[] hour_temp = calendarToHorasString(calendario).split(":");
            hour_temp[0] = Integer.toString(24 * (calendario.get(Calendar.DAY_OF_YEAR) - controle_dia) + Integer.parseInt(hour_temp[0]));
            return hour_temp[0] + ":" + hour_temp[1];
        }
        return calendarToHorasString(calendario);
    }

    private Calendar milesToCalendar(Long miles) {
        Calendar calendario = Calendar.getInstance();
        calendario.set(Calendar.HOUR_OF_DAY, 0);
        calendario.set(Calendar.MINUTE, 0);
        calendario.set(Calendar.SECOND, 0);
        calendario.setTimeInMillis(calendario.getTimeInMillis() + miles);
        return calendario;
    }

    private long getHorasExtrasNoturnas(Calendar[] time, int index) {
        long hor_noturno_miles = 0;
        Calendar ultimo_time_22 = Calendar.getInstance();
        Calendar primeiro_time_5 = Calendar.getInstance();
        ultimo_time_22.set(Calendar.HOUR_OF_DAY, 22);
        primeiro_time_5.set(Calendar.HOUR_OF_DAY, 5);
        ultimo_time_22.set(Calendar.MINUTE, 0);
        primeiro_time_5.set(Calendar.MINUTE, 0);
        ultimo_time_22.set(Calendar.SECOND, 0);
        primeiro_time_5.set(Calendar.SECOND, 0);
        primeiro_time_5.add(Calendar.DAY_OF_YEAR, 1);
        if (jTable1.getValueAt(index, COLUNA_SAIDA_3) != null) {
            if (time[5].after(ultimo_time_22) && time[5].before(primeiro_time_5)) {
                hor_noturno_miles = time[5].getTimeInMillis() - ultimo_time_22.getTimeInMillis();
            }
        } else if (jTable1.getValueAt(index, COLUNA_SAIDA_2) != null) {
            if (time[3].after(ultimo_time_22) && time[3].before(primeiro_time_5)) {
                hor_noturno_miles = time[3].getTimeInMillis() - ultimo_time_22.getTimeInMillis();
            }
        } else if (jTable1.getValueAt(index, COLUNA_SAIDA_1) != null) {
            if (time[1].after(ultimo_time_22) && time[1].before(primeiro_time_5)) {
                hor_noturno_miles = time[1].getTimeInMillis() - ultimo_time_22.getTimeInMillis();
            }
        }
        return hor_noturno_miles;
    }

    private void obter_cartao_lancado() {
        try {
            reg = new CartaoPontoDAO().lancado(funcionario, mes_slider.getValue(), (int) ano_spinner.getValue());
            reg_sub = reg;
            CartaoPonto cartao_ponto = new CartaoPontoDAO().getLancado(reg, jTable1);
            txt_horas_extras_50.setText(cartao_ponto.getExtra());
            txt_horas_extras_100.setText(cartao_ponto.getExtra_100());
            txt_horas_noturnas.setText(cartao_ponto.getNoturna());
            txt_reducao_noturno.setText(Double.toString(cartao_ponto.getReducao()));
            txt_horas_faltas.setText(cartao_ponto.getFalta());
            txt_horas_faltas_dsr.setText(cartao_ponto.getFalta_dsr());
            switch (cartao_ponto.getJornada()) {
                case "07:20":
                    jornada7.setSelected(true);
                    break;
                case "05:20":
                    jornada5.setSelected(true);
                    break;
                case "06:00":
                    jornada6.setSelected(true);
                    break;
            }
            alterar_status_visible_btns(true);
        } catch (Exception e) {
            System.err.println(e.getMessage());
            reg = -1;
            reg_sub = 1;
            limpar_jtable();
            alterar_status_visible_btns(false);
            txt_horas_extras_50.setText(null);
            txt_horas_extras_100.setText(null);
            txt_horas_noturnas.setText(null);
            txt_reducao_noturno.setText(null);
            txt_horas_faltas.setText(null);
        }
    }

    private void limpar_jtable() {
        for (int linha = 0; linha < jTable1.getRowCount(); linha++) {
            for (int coluna = 1; coluna < jTable1.getColumnCount(); coluna++) {
                jTable1.setValueAt(null, linha, coluna);
            }
        }
    }

    private void alterar_status_visible_btns(boolean cartao_existe) {
        editbtn.setVisible(cartao_existe);
        imprimirBtn.setVisible(cartao_existe);

        sabadoBtn.setVisible(!cartao_existe);
        domingoBtn.setVisible(!cartao_existe);
        folgaBtn.setVisible(!cartao_existe);
        atestadoBtn.setVisible(!cartao_existe);
        feriadoBtn.setVisible(!cartao_existe);
        faltaBtn.setVisible(!cartao_existe);
        limpaDiaBtn.setVisible(!cartao_existe);
        concluirBtn.setVisible(!cartao_existe);
        txt_hora1.setEnabled(!cartao_existe);
        txt_hora2.setEnabled(!cartao_existe);
        txt_hora3.setEnabled(!cartao_existe);
        txt_hora4.setEnabled(!cartao_existe);
        txt_hora5.setEnabled(!cartao_existe);
        txt_hora6.setEnabled(!cartao_existe);
    }

    private void salvar() {
        if (reg != -1) {
            //cartao vai ser atualizado
            CartaoPonto cartao = new CartaoPonto();
            cartao.setFuncionario(funcionario);
            cartao.setTabela(tb);
            cartao.setAno((int) ano_spinner.getValue());
            cartao.setMes(mes_slider.getValue());
            cartao.setDias(jTable1.getRowCount());
            cartao.setExtra(txt_horas_extras_50.getText());
            cartao.setExtra_100(txt_horas_extras_100.getText());
            cartao.setFalta(txt_horas_faltas.getText());
            cartao.setFalta_dsr(txt_horas_faltas_dsr.getText());
            cartao.setNoturna(txt_horas_noturnas.getText());
            cartao.setReducao(Double.parseDouble(txt_reducao_noturno.getText()));
            cartao.setJornada(jornadaString);

            cartao.setReg(reg);
            cartao.setReg_sub(reg_sub);

            List<String[]> list = new ArrayList<>();
            for (int x = 0; x < jTable1.getRowCount(); x++) {
                String[] linha = new String[8];
                for (int i = 0; i < 8; i++) {
                    linha[i] = String.valueOf(jTable1.getValueAt(x, i));
                }
                list.add(linha);
            }

            if (new CartaoPontoDAO().atualizar(cartao, list)) {
                JOptionPane.showMessageDialog(this, "Atualizado com sucesso!");
                obter_cartao_lancado();
                imprimir(false,false);
            } else {
                JOptionPane.showMessageDialog(this, "Algo deu errado!...");
            }
        } else {
            //novo cartao
            CartaoPonto cartao = new CartaoPonto();
            cartao.setFuncionario(funcionario);
            cartao.setTabela(tb);
            cartao.setAno((int) ano_spinner.getValue());
            cartao.setMes(mes_slider.getValue());
            cartao.setDias(jTable1.getRowCount());
            cartao.setExtra(txt_horas_extras_50.getText());
            cartao.setExtra_100(txt_horas_extras_100.getText());
            cartao.setFalta(txt_horas_faltas.getText());
            cartao.setFalta_dsr(txt_horas_faltas_dsr.getText());
            cartao.setNoturna(txt_horas_noturnas.getText());
            cartao.setReducao(Double.parseDouble(txt_reducao_noturno.getText()));
            cartao.setJornada(jornadaString);
            List<String[]> list = new ArrayList<>();
            for (int x = 0; x < jTable1.getRowCount(); x++) {
                String[] linha = new String[8];
                for (int i = 0; i < 8; i++) {
                    linha[i] = String.valueOf(jTable1.getValueAt(x, i));
                }
                list.add(linha);
            }
            try {
                int registro = new CartaoPontoDAO().nextReg();
                if (new CartaoPontoDAO().salvar(cartao, registro, list)) {
                    //na linha abaixo √© dado um refresh para tudo que estiver sido exibido √© exatamente o que veio do banco de dados
                    //ficando facil de conferir se as informa√ß√µes realmente foram completas.
                    obter_cartao_lancado();
                    JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Conclu√≠do", JOptionPane.PLAIN_MESSAGE);
                    imprimir(false,false);
                } else {
                    JOptionPane.showMessageDialog(this, "Algo deu errado! Desfazendo altera√ß√µes no banco de dados...", "Erro", JOptionPane.WARNING_MESSAGE);
                    if (!new CartaoPontoDAO().removerAlteracoes(cartao)) {
                        JOptionPane.showMessageDialog(null, "Erro ao tentar remover altera√ß√µes no banco de dados, por favor informe o programador passando as informa√ß√µes do Funcion√°rio, m√™s e ano, para serem removidas manualmente", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private double obterReducaoNoturno(String noturno) {
        String[] hora = noturno.split(":");
        double valor = ((double) ((Integer.parseInt(hora[1]) / 100.0) * 1.666666) + (Integer.parseInt(hora[0])));
        valor *= FATOR_REDUCAO_NOTURNO;
        return CDbl.CDblDuasCasas(valor);
    }

    /*
        Caso deseje visualizar o arquivo gerado selecione true para o @param visualizar
        Caso deseje exportar o arquivo selecione true para o @param exportar
        Caso seja passado os dois parametros como false vai ser gerado um arquivo backup pdf
        na pasta src/jasper/backup
    */
    private void imprimir(boolean visualizar, boolean exportar) {
        Connection conn = ConnectionFactory.getConnection();
        String src = "src/jaspers/CartaoPontojs.jasper";
        JasperPrint js = null;
        try {
            HashMap<String, Object> map = new HashMap<>();
            map.put("cdfun", funcionario.getCodigo());
            map.put("anofun", (int) ano_spinner.getValue());
            map.put("mesfun", mes_slider.getValue());
            String fer = "";
            if (!feriados.isEmpty()) {
                for (FeriadosBrasil f : feriados) {
                    String temp = (String) jTable1.getValueAt(f.getDia() - 1, 7);
                    String situacao = String.valueOf(jTable1.getValueAt(f.getDia() - 1, 0));
                    //n√£o pode ser nulo, nen horas trabalhadas = 00:00 nem Atestado
                    if (temp != null && !"00:00".equals(temp) && !"A".equals(situacao)) {
                        fer += "‚úî " + f.toString() + "\n";
                    } else {
                        fer += "‚úñ " + f.toString() + "\n";
                    }
                }
            }
            System.out.println(fer);
            map.put("feriados", fer);
            js = JasperFillManager.fillReport(src, map, conn);
        } catch (JRException e) {
            JOptionPane.showMessageDialog(null, "Erro:" + e.getMessage());
        }
        if (!visualizar) {
            try {
                if (exportar) {
                    JFileChooser chooser = new JFileChooser();
                    chooser.setDialogTitle("Exporta√ß√£o para PDF");
                    chooser.setDialogType(JFileChooser.SAVE_DIALOG);
                    FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("PDF", "pdf");
                    chooser.setFileFilter(extensionFilter);
                    int op = chooser.showSaveDialog(null);
                    if (op == JFileChooser.APPROVE_OPTION) {
                        JasperExportManager.exportReportToPdfFile(js, chooser.getSelectedFile().getPath() + ".pdf");
                        JOptionPane.showMessageDialog(null, "Exportado com sucesso!");
                    }
                } else {
                    JasperExportManager.exportReportToPdfFile(js, "src/jaspers/backup/" + String.valueOf(ano_spinner.getValue()) + " " + mestxt.getText() + " " + funcionario.getNome() + ".pdf");
                }
            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "ERRO: " + e);
            }
        }
        if (visualizar) {
            JasperViewer vw = new JasperViewer(js, false);
            vw.setTitle("Cart√£o Ponto");
            vw.setVisible(true);
            vw.requestFocus();
        }
        ConnectionFactory.closeConnection(conn);
    }

    private void CalcularHorasFaltasDSR() {
        Calendar dia_calendar = Calendar.getInstance();
        dia_calendar.set(Calendar.DAY_OF_MONTH, 1);
        dia_calendar.set(Calendar.MONTH, mes_slider.getValue() - 1);
        dia_calendar.set(Calendar.YEAR, (int) ano_spinner.getValue());
        dia_calendar.set(Calendar.HOUR_OF_DAY, 0);
        dia_calendar.set(Calendar.MINUTE, 0);
        dia_calendar.set(Calendar.SECOND, 0);
        //o dsr contabiliza como primeiro dia da semana a segunda feira
        dia_calendar.setFirstDayOfWeek(Calendar.MONDAY);
        int semana = 0;
        long falta_dsr = 0;

        int horas = getJornadaCalendar().get(Calendar.HOUR_OF_DAY) * 3600000;
        int minutos = getJornadaCalendar().get(Calendar.MINUTE) * 60000;
        long jornada_miles = horas + minutos;
        for (int index = 0; index < jTable1.getRowCount(); index++) {
            if (dia_calendar.get(Calendar.DAY_OF_WEEK) == dia_calendar.getFirstDayOfWeek()) {
                semana = 0;
                //System.out.println("PRIMEIRO DIA DA SEMANA: " + dia_calendar.get(Calendar.DAY_OF_MONTH));
            }
            String verificacao = String.valueOf(jTable1.getValueAt(index, 0));
            if (verificacao.equals("F") && semana <= 0) {
                semana = 7;
                falta_dsr += jornada_miles;
            }
            semana--;
            dia_calendar.add(Calendar.DAY_OF_YEAR, 1);
        }
        //System.out.println("HORAS FALTAS DSR: " + milesToHoraString(falta_dsr));
        horas_faltas_dsr = falta_dsr;
        txt_horas_faltas_dsr.setText(milesToHoraString(falta_dsr));
    }

}
