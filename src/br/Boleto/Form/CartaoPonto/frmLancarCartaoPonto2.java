/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Boleto.Form.CartaoPonto;

import JDBC.ConnectionFactory;
import funcoes.CDate;
import funcoes.CDbl;
import funcoes.ScroollJTable;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.DAO.FeriadosBrasilDAO;
import model.DAO.funcionario.CartaoPontoDAO;
import model.DAO.funcionario.FuncionarioDAO;
import model.bean.CartaoPonto;
import model.bean.FeriadosBrasil;
import model.bean.Funcionario;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Jonathan CR
 */
public class frmLancarCartaoPonto2 extends javax.swing.JFrame {

    private Funcionario funcionario;
    private int ano, mes, maior;
    private SpinnerNumberModel dia;
    private Calendar calendario;
    private DefaultTableModel tb;
    private String jornadaString;
    private boolean jaLancado;
    private int reg = 0, reg_sub = 0;
    private boolean infoMensagem = true;
    private List<FeriadosBrasil> feriados;
    private DefaultListModel lista_feriados = new DefaultListModel();

    /**
     * Creates new form frmLancarCartao2
     *
     * @param funcionario
     */
    public frmLancarCartaoPonto2(Funcionario funcionario) {
        initComponents();
        init(funcionario);
    }

    public void init(Funcionario funcionario_) {
        //defini o funcionario
        funcionario = funcionario_;
        nomeLbl.setText(funcionario.getNome());
        txt_salario_base.setValue(funcionario.getSalario());
        //defini parametros iniciais de controle
        feriados = new ArrayList<>();
        jList1.setModel(lista_feriados);
        jaLancado = false;
        reg = -1;
        reg_sub = -1;
        //seta tabela
        tb = (DefaultTableModel) jTable1.getModel();
        //seta data atual
        calendario = Calendar.getInstance();
        calendario.add(Calendar.MONTH, - 1);
        mes = calendario.get(Calendar.MONTH) + 1;
        ano = calendario.get(Calendar.YEAR);
        calendario.setFirstDayOfWeek(Calendar.SUNDAY);
        //seta variaveis slider e spinner
        sliderMes.setValue(mes);
        anoSpinner.setValue(ano);
        dia = (SpinnerNumberModel) jSpinnerDia.getModel();
        dia.setValue(1);
        //seta jornada
        jornada7.setSelected(true);
        jornadaString = "07:20";
        //defini foco
        txt_entrada.requestFocus();
        //grupo de botoes de jornada
        buttonGroup1.add(jornada6);
        buttonGroup1.add(jornada7);
        buttonGroup1.add(jornada5);
        definirMes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        anoSpinner = new javax.swing.JSpinner();
        sliderMes = new javax.swing.JSlider();
        mestxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_entrada = new javax.swing.JFormattedTextField();
        txt_saida_intervalo = new javax.swing.JFormattedTextField();
        txt_entrada_intervalo = new javax.swing.JFormattedTextField();
        txt_saida = new javax.swing.JFormattedTextField();
        txt_entrada_aux = new javax.swing.JFormattedTextField();
        txt_saida_aux = new javax.swing.JFormattedTextField();
        jSpinnerDia = new javax.swing.JSpinner();
        sabadoBtn = new javax.swing.JButton();
        domingoBtn = new javax.swing.JButton();
        folgaBtn = new javax.swing.JButton();
        feriadoBtn = new javax.swing.JButton();
        atestadoBtn = new javax.swing.JButton();
        faltaBtn = new javax.swing.JButton();
        limpaDiaBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jornada6 = new javax.swing.JRadioButton();
        jornada7 = new javax.swing.JRadioButton();
        jornada5 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        nomeLbl = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_horas_extras_50 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_horas_faltas = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_horas_noturnas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_reducao_noturno = new javax.swing.JTextField();
        txt_horas_extras_100 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_valor_hora = new javax.swing.JTextField();
        txt_valor_hora_extra = new javax.swing.JTextField();
        txt_valor_total_Salario = new javax.swing.JTextField();
        txt_valor_total_Extra = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_valor_DSR = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_INSS = new javax.swing.JTextField();
        txt_hora_DSR = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_numero_feriados = new javax.swing.JSpinner();
        jButton10 = new javax.swing.JButton();
        inssSpin = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        txt_salario_base = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        txt_descontos = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        txt_indenizacao = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        concluirBtn = new javax.swing.JButton();
        imprimirBtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        importBtn = new javax.swing.JButton();
        fakebtn = new javax.swing.JButton();
        importBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cart√£o Ponto");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        anoSpinner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        anoSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                anoSpinnerStateChanged(evt);
            }
        });

        sliderMes.setBackground(new java.awt.Color(153, 153, 153));
        sliderMes.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        sliderMes.setForeground(new java.awt.Color(0, 0, 0));
        sliderMes.setMajorTickSpacing(1);
        sliderMes.setMaximum(12);
        sliderMes.setMinimum(1);
        sliderMes.setMinorTickSpacing(1);
        sliderMes.setPaintLabels(true);
        sliderMes.setPaintTicks(true);
        sliderMes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sliderMesMouseClicked(evt);
            }
        });
        sliderMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sliderMesKeyPressed(evt);
            }
        });

        mestxt.setText("Mes");

        jLabel1.setText("Ano");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(sliderMes, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
                .addGap(39, 39, 39)
                .addComponent(anoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(mestxt, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mestxt)
                    .addComponent(jLabel1))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(sliderMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Entrada", "S. Intervalo", "E. Intervalo", "Saida", "Entrada", "Saida", "Horas Trabalhadas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        try {
            txt_entrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_entrada.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_entrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_entradaKeyPressed(evt);
            }
        });

        try {
            txt_saida_intervalo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_saida_intervalo.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_saida_intervalo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saida_intervaloKeyPressed(evt);
            }
        });

        try {
            txt_entrada_intervalo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_entrada_intervalo.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_entrada_intervalo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_entrada_intervaloKeyPressed(evt);
            }
        });

        try {
            txt_saida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_saida.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_saida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_saidaActionPerformed(evt);
            }
        });
        txt_saida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saidaKeyPressed(evt);
            }
        });

        try {
            txt_entrada_aux.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_entrada_aux.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_entrada_aux.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_entrada_auxKeyPressed(evt);
            }
        });

        try {
            txt_saida_aux.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_saida_aux.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        txt_saida_aux.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saida_auxKeyPressed(evt);
            }
        });

        jSpinnerDia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerDiaStateChanged(evt);
            }
        });

        sabadoBtn.setText("S: S√°bado");
        sabadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sabadoBtnActionPerformed(evt);
            }
        });

        domingoBtn.setText("D: Domingo");
        domingoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domingoBtnActionPerformed(evt);
            }
        });

        folgaBtn.setText("R: Folga");
        folgaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                folgaBtnActionPerformed(evt);
            }
        });

        feriadoBtn.setText("H: Feriado");
        feriadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feriadoBtnActionPerformed(evt);
            }
        });

        atestadoBtn.setText("A: Atestado");
        atestadoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atestadoBtnActionPerformed(evt);
            }
        });

        faltaBtn.setText("F: Falta");
        faltaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faltaBtnActionPerformed(evt);
            }
        });

        limpaDiaBtn.setText("Limpar Dia");
        limpaDiaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpaDiaBtnActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Jornada"));

        jornada6.setBackground(new java.awt.Color(255, 255, 255));
        jornada6.setText("06:00");
        jornada6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jornada6MouseClicked(evt);
            }
        });
        jornada6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada6ActionPerformed(evt);
            }
        });

        jornada7.setBackground(new java.awt.Color(255, 255, 255));
        jornada7.setText("07:20");
        jornada7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada7ActionPerformed(evt);
            }
        });

        jornada5.setBackground(new java.awt.Color(255, 255, 255));
        jornada5.setText("05:20");
        jornada5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornada5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jornada7)
                    .addComponent(jornada5)
                    .addComponent(jornada6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jornada5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jornada6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jornada7))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Estat√≠stica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        nomeLbl.setEditable(false);
        nomeLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nomeLbl.setFocusable(false);

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Calculo Folha"));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Horas Extras 50%");

        txt_horas_extras_50.setEditable(false);
        txt_horas_extras_50.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Horas Faltas");

        txt_horas_faltas.setEditable(false);
        txt_horas_faltas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Horas Noturnas");

        txt_horas_noturnas.setEditable(false);
        txt_horas_noturnas.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Redu√ß√£o Horas Noturno");

        txt_reducao_noturno.setEditable(false);
        txt_reducao_noturno.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txt_horas_extras_100.setEditable(false);
        txt_horas_extras_100.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Horas Extras 100%");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_horas_faltas)
            .addComponent(txt_horas_noturnas)
            .addComponent(txt_reducao_noturno)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(txt_horas_extras_50))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(txt_horas_extras_100))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_extras_50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(0, 0, 0)
                        .addComponent(txt_horas_extras_100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(txt_horas_faltas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(txt_horas_noturnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(0, 0, 0)
                .addComponent(txt_reducao_noturno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "Calculo Aproximado"));

        jLabel7.setText("Sal√°rio Base");

        jLabel8.setText("Valor Hora");

        jLabel9.setText("Valor H. Extra");

        jLabel10.setText("Valor Total");

        jLabel11.setText("Total Extra");

        jLabel12.setText("Total DSR");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("INSS");

        jLabel13.setText("N¬∫ Feriados");

        txt_numero_feriados.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jButton10.setText("Calcular");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        inssSpin.setModel(new javax.swing.SpinnerNumberModel(9, 0, null, 1));

        jLabel15.setText("%");

        txt_salario_base.setModel(new javax.swing.SpinnerNumberModel(1323.0d, 0.0d, null, 1.0d));

        jLabel16.setText("Descontos");

        txt_descontos.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));

        jLabel17.setText("Hora DSR");

        txt_indenizacao.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, null, 1.0d));

        jLabel18.setText("Indeniza√ß√£o");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txt_valor_total_Salario)
            .addComponent(txt_valor_total_Extra)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(inssSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_INSS))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_hora_DSR)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_valor_DSR, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(txt_valor_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_valor_hora_extra))
            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_salario_base, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_descontos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(txt_numero_feriados))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_indenizacao)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_salario_base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_descontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_numero_feriados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_indenizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_valor_hora_extra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_valor_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_INSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inssSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)))
                .addGap(5, 5, 5)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_valor_DSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_hora_DSR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(0, 0, 0)
                .addComponent(txt_valor_total_Extra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(0, 0, 0)
                .addComponent(txt_valor_total_Salario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane2.setViewportView(jPanel7);

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder("Feriados"));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nomeLbl)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane4)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(nomeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        concluirBtn.setText("Concluir");
        concluirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concluirBtnActionPerformed(evt);
            }
        });

        imprimirBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/printer.png"))); // NOI18N
        imprimirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimirBtnActionPerformed(evt);
            }
        });

        editbtn.setText("Editar");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Dia Corrente");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        importBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_white_picture.png"))); // NOI18N
        importBtn.setToolTipText("Importar CVS");
        importBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtnActionPerformed(evt);
            }
        });

        fakebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_white_code.png"))); // NOI18N
        fakebtn.setToolTipText("Cart√£o Fict√≠cio");
        fakebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fakebtnActionPerformed(evt);
            }
        });

        importBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/page_white_code_red.png"))); // NOI18N
        importBtn1.setToolTipText("Diminuir Diferen√ßa de Horas");
        importBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jSpinnerDia, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_saida_intervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(txt_entrada_intervalo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(txt_saida, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_entrada_aux, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_saida_aux, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(limpaDiaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(domingoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imprimirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sabadoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(fakebtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(importBtn))
                                    .addComponent(importBtn1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(folgaBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(feriadoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(atestadoBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(faltaBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(concluirBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSpinnerDia, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_entrada)
                                        .addComponent(txt_saida_intervalo)
                                        .addComponent(txt_entrada_intervalo)
                                        .addComponent(txt_saida)
                                        .addComponent(txt_entrada_aux)
                                        .addComponent(txt_saida_aux)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(importBtn)
                                    .addComponent(fakebtn))
                                .addGap(5, 5, 5)
                                .addComponent(importBtn1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sabadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(domingoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(folgaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(feriadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atestadoBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(faltaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpaDiaBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imprimirBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(concluirBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void anoSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_anoSpinnerStateChanged
        ano = (int) anoSpinner.getValue();
        calendario.set(Calendar.YEAR, ano);
        atualizardias();
    }//GEN-LAST:event_anoSpinnerStateChanged

    private void txt_entradaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_entradaKeyPressed
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_D:
                //domingo
                txt_entrada.setText("");
                domingoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_S:
                //sabado
                txt_entrada.setText("");
                sabadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_R:
                //folga
                txt_entrada.setText("");
                folgaBtnActionPerformed(null);
                break;
            case KeyEvent.VK_H:
                //feriado
                txt_entrada.setText("");
                feriadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_A:
                //atestado
                txt_entrada.setText("");
                atestadoBtnActionPerformed(null);
                break;
            case KeyEvent.VK_F:
                //falta
                txt_entrada.setText("");
                faltaBtnActionPerformed(null);
                break;
            case KeyEvent.VK_ENTER:
                txt_saida_intervalo.requestFocus();
                verificacaoMeiaNoite(txt_entrada.getText());
                break;
            default:
                break;
        }
        calcularHoras();
    }//GEN-LAST:event_txt_entradaKeyPressed

    private void txt_saida_intervaloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saida_intervaloKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_entrada.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_entrada_intervalo.requestFocus();
            verificacaoMeiaNoite(txt_saida_intervalo.getText());
        }
    }//GEN-LAST:event_txt_saida_intervaloKeyPressed

    private void txt_entrada_intervaloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_entrada_intervaloKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_saida_intervalo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_saida.requestFocus();
            verificacaoMeiaNoite(txt_entrada_intervalo.getText());
        }
    }//GEN-LAST:event_txt_entrada_intervaloKeyPressed

    private void txt_saidaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saidaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            txt_entrada_intervalo.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificacaoMeiaNoite(txt_saida.getText());
            lancarHorarios();
            calcularHoras();
            dia.setValue((int) dia.getValue() + 1);
            txt_entrada.requestFocus();
        }
    }//GEN-LAST:event_txt_saidaKeyPressed

    private void txt_entrada_auxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_entrada_auxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_saida_aux.requestFocus();
            verificacaoMeiaNoite(txt_entrada_aux.getText());
        }
    }//GEN-LAST:event_txt_entrada_auxKeyPressed

    private void txt_saida_auxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saida_auxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            verificacaoMeiaNoite(txt_saida_aux.getText());
            lancarHorarios();
            dia.setValue((int) dia.getValue() + 1);
            txt_entrada.requestFocus();
            calcularHoras();
        }
    }//GEN-LAST:event_txt_saida_auxKeyPressed

    private void jSpinnerDiaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerDiaStateChanged
        if ((int) dia.getValue() >= maior) {
            dia.setValue(maior);
        } else if ((int) dia.getValue() < 1) {
            dia.setValue(1);
        }
    }//GEN-LAST:event_jSpinnerDiaStateChanged

    private void sabadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sabadoBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("S", (int) dia.getValue() - 1, 0);
        dia.setValue((int) dia.getValue() + 1);
        txt_entrada.requestFocus();
    }//GEN-LAST:event_sabadoBtnActionPerformed

    private void domingoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domingoBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("D", (int) dia.getValue() - 1, 0);
        dia.setValue((int) dia.getValue() + 1);
        calcularHoras();
        txt_entrada.requestFocus();
    }//GEN-LAST:event_domingoBtnActionPerformed

    private void folgaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_folgaBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("R", (int) dia.getValue() - 1, 0);
        tb.setValueAt("00:00", (int) dia.getValue() - 1, 7);
        dia.setValue((int) dia.getValue() + 1);
        calcularHoras();
        txt_entrada.requestFocus();
    }//GEN-LAST:event_folgaBtnActionPerformed

    private void feriadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feriadoBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("H", (int) dia.getValue() - 1, 0);
        dia.setValue((int) dia.getValue() + 1);
        txt_entrada.requestFocus();
    }//GEN-LAST:event_feriadoBtnActionPerformed

    private void atestadoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atestadoBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("A", (int) dia.getValue() - 1, 0);
        tb.setValueAt(jornada(), (int) dia.getValue() - 1, 7);
        dia.setValue((int) dia.getValue() + 1);
        calcularHoras();
        txt_entrada.requestFocus();
    }//GEN-LAST:event_atestadoBtnActionPerformed

    private void faltaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faltaBtnActionPerformed
        lancarHorarios();
        tb.setValueAt("F", (int) dia.getValue() - 1, 0);
        tb.setValueAt("00:00", (int) dia.getValue() - 1, 7);
        dia.setValue((int) dia.getValue() + 1);
        calcularHoras();
        txt_entrada.requestFocus();
    }//GEN-LAST:event_faltaBtnActionPerformed

    private void limpaDiaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpaDiaBtnActionPerformed
        int linha = (int) dia.getValue() - 1;
        tb.setValueAt(linha + 1, linha, 0);
        tb.setValueAt(null, linha, 1);
        tb.setValueAt(null, linha, 2);
        tb.setValueAt(null, linha, 3);
        tb.setValueAt(null, linha, 4);
        tb.setValueAt(null, linha, 5);
        tb.setValueAt(null, linha, 6);
        tb.setValueAt(null, linha, 7);
        calcularHoras();
        txt_entrada.requestFocus();
    }//GEN-LAST:event_limpaDiaBtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() < 0) {
            return;
        }
        dia.setValue((int) jTable1.getSelectedRow() + 1);
        carregarDiaClickado((int) jTable1.getSelectedRow());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jornada6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jornada6MouseClicked
    }//GEN-LAST:event_jornada6MouseClicked

    private void jornada7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada7ActionPerformed
        if (jornada7.isSelected()) {
            jornadaString = "07:20";
            System.out.println("Mudou para jornada: 07:20");
            calcularHoras();
        }
    }//GEN-LAST:event_jornada7ActionPerformed

    private void jornada6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada6ActionPerformed
        if (jornada6.isSelected()) {
            jornadaString = "06:00";
            System.out.println("Mudou para jornada: 06:00");
            calcularHoras();
        }
    }//GEN-LAST:event_jornada6ActionPerformed

    private void txt_saidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_saidaActionPerformed
    }//GEN-LAST:event_txt_saidaActionPerformed

    private void concluirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concluirBtnActionPerformed
        if (!jaLancado) {
            salvar();
        } else {
            int op = JOptionPane.showOptionDialog(null, "Deseja realmente atualizar o cart√£o Ponto?\nAs altera√ß√µes ser√£o irreversiv√©is!", "Atualizar Cart√£o Ponto", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (op == JOptionPane.YES_OPTION) {
                atualizar();
            }
        }
    }//GEN-LAST:event_concluirBtnActionPerformed

    private void imprimirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimirBtnActionPerformed
        imprimir();
    }//GEN-LAST:event_imprimirBtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        StatusBtn(true);
    }//GEN-LAST:event_editbtnActionPerformed

    private void jornada5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornada5ActionPerformed
        if (jornada5.isSelected()) {
            jornadaString = "05:20";
            System.out.println("Mudou para jornada: 05:20");
            calcularHoras();
        }
    }//GEN-LAST:event_jornada5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        calcularAproximacao();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void importBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtnActionPerformed
        importCVS();
    }//GEN-LAST:event_importBtnActionPerformed

    private void fakebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fakebtnActionPerformed
        cartaoFicticio();
    }//GEN-LAST:event_fakebtnActionPerformed

    private void importBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBtn1ActionPerformed
        SemHorasExtrasEFaltas();
    }//GEN-LAST:event_importBtn1ActionPerformed

    private void sliderMesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderMesMouseClicked
        definirMes();
    }//GEN-LAST:event_sliderMesMouseClicked

    private void sliderMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sliderMesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            definirMes();
        }
    }//GEN-LAST:event_sliderMesKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLancarCartaoPonto2(new FuncionarioDAO().getFuncionario(2)).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner anoSpinner;
    private javax.swing.JButton atestadoBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton concluirBtn;
    private javax.swing.JButton domingoBtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JButton fakebtn;
    private javax.swing.JButton faltaBtn;
    private javax.swing.JButton feriadoBtn;
    private javax.swing.JButton folgaBtn;
    private javax.swing.JButton importBtn;
    private javax.swing.JButton importBtn1;
    private javax.swing.JButton imprimirBtn;
    private javax.swing.JSpinner inssSpin;
    private javax.swing.JButton jButton10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinnerDia;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton jornada5;
    private javax.swing.JRadioButton jornada6;
    private javax.swing.JRadioButton jornada7;
    private javax.swing.JButton limpaDiaBtn;
    private javax.swing.JLabel mestxt;
    private javax.swing.JTextField nomeLbl;
    private javax.swing.JButton sabadoBtn;
    private javax.swing.JSlider sliderMes;
    private javax.swing.JTextField txt_INSS;
    private javax.swing.JSpinner txt_descontos;
    private javax.swing.JFormattedTextField txt_entrada;
    private javax.swing.JFormattedTextField txt_entrada_aux;
    private javax.swing.JFormattedTextField txt_entrada_intervalo;
    private javax.swing.JTextField txt_hora_DSR;
    private javax.swing.JTextField txt_horas_extras_100;
    private javax.swing.JTextField txt_horas_extras_50;
    private javax.swing.JTextField txt_horas_faltas;
    private javax.swing.JTextField txt_horas_noturnas;
    private javax.swing.JSpinner txt_indenizacao;
    private javax.swing.JSpinner txt_numero_feriados;
    private javax.swing.JTextField txt_reducao_noturno;
    private javax.swing.JFormattedTextField txt_saida;
    private javax.swing.JFormattedTextField txt_saida_aux;
    private javax.swing.JFormattedTextField txt_saida_intervalo;
    private javax.swing.JSpinner txt_salario_base;
    private javax.swing.JTextField txt_valor_DSR;
    private javax.swing.JTextField txt_valor_hora;
    private javax.swing.JTextField txt_valor_hora_extra;
    private javax.swing.JTextField txt_valor_total_Extra;
    private javax.swing.JTextField txt_valor_total_Salario;
    // End of variables declaration//GEN-END:variables

    /*
    * Procedimento para escrever o mes no jLabel e atuzalizar a variavel mes, tamb√©m chama o procedimento atualizardias()
     */
    private void definirMes() {
        mes = sliderMes.getValue();
        calendario.set(Calendar.MONTH, mes - 1);
        lista_feriados.removeAllElements();
        feriados = new FeriadosBrasilDAO().getFeriadosDoMes(mes, ano);
        lista_feriados.addAll(feriados);
        switch (sliderMes.getValue()) {
            case 1:
                mestxt.setText("Janeiro");
                break;
            case 2:
                mestxt.setText("Fevereiro");
                break;
            case 3:
                mestxt.setText("Mar√ßo");
                break;
            case 4:
                mestxt.setText("Abril");
                break;
            case 5:
                mestxt.setText("Maio");
                break;
            case 6:
                mestxt.setText("Junho");
                break;
            case 7:
                mestxt.setText("Julho");
                break;
            case 8:
                mestxt.setText("Agosto");
                break;
            case 9:
                mestxt.setText("Setembro");
                break;
            case 10:
                mestxt.setText("Outubro");
                break;
            case 11:
                mestxt.setText("Novembro");
                break;
            case 12:
                mestxt.setText("Dezembro");
                break;
        }
        atualizardias();
        //verifica se o cartao desse mes j√° foi lan√ßado no banco de dados
        verificarExistente();
    }

    /*
    * Procedimento para atualizar os dias na JTable conforme muda mes/ano
     */
    private void atualizardias() {
        //quantidade de dias do mes selecionado
        int maxDias = calendario.getActualMaximum(Calendar.DAY_OF_MONTH);
        //seta a quantidade de dias na tabela
        tb.setRowCount(maxDias);
        //variavel que verifica se j√° √© o ultimo dia
        maior = maxDias;
        //for pra preenchimento dos dias na tabela e informa tamb√©m os dias que s√£o domingo como "D"
        for (int x = 1; x < maxDias + 1; x++) {
            calendario.set(Calendar.DAY_OF_MONTH, x);
            if (calendario.get(Calendar.DAY_OF_WEEK) == 1) { //se for domingo
                tb.setValueAt("D", x - 1, 0);
            } else {
                tb.setValueAt(x, x - 1, 0);
            }
        }
        //seta a variavel calendario para o primeiro dia do mes selecionado
        calendario.set(Calendar.DAY_OF_MONTH, 1);
    }

    private void calcularHoras() {
        //inicia vari√°veis zeradas
        double entrada = 0,
                saida_intervalo = 0,
                entrada_intervalo = 0,
                saida = 0,
                entrada_ex = 0,
                saida_ex = 0,
                horasTrabalhadas = 0,
                extra = 0,
                falta = 0,
                noturna = 0;
        //define base com valor da jornada em decimal
        double base = CDate.horaPDecimal(jornadaString);
        base = CDbl.CDblDuasCasas(base);
        //executa o procedimento em todas as linhas da tabela, sendo "x" a linha
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            entrada = 0;
            saida_intervalo = 0;
            entrada_intervalo = 0;
            saida = 0;
            entrada_ex = 0;
            saida_ex = 0;
            horasTrabalhadas = 0;
            if (tb.getValueAt(x, 1) != null) {
                entrada = CDate.horaPDecimal((String) tb.getValueAt(x, 1));
            }
            if (tb.getValueAt(x, 2) != null) {
                saida_intervalo = CDate.horaPDecimal((String) tb.getValueAt(x, 2));
            }
            if (tb.getValueAt(x, 3) != null) {
                entrada_intervalo = CDate.horaPDecimal((String) tb.getValueAt(x, 3));
            }
            if (tb.getValueAt(x, 4) != null) {
                saida = CDate.horaPDecimal((String) tb.getValueAt(x, 4));
            }
            if (tb.getValueAt(x, 5) != null) {
                entrada_ex = CDate.horaPDecimal((String) tb.getValueAt(x, 5));
            }
            if (tb.getValueAt(x, 6) != null) {
                saida_ex = CDate.horaPDecimal((String) tb.getValueAt(x, 6));
            }
            try {
                String temp_ = (String) jTable1.getValueAt(x, 0);
                if (temp_.equals("F")) {
                    System.out.println("DIA COM FALTA: " + (x + 1));
                }
                if (temp_.equals("A")) { //verifica se o dia em quest√£o √© Atestado. O atestado cobre as horas faltas daquele dia.
                    if (horasTrabalhadas < base) {
                        horasTrabalhadas = base;
                    }
                } else {
                    horasTrabalhadas = (saida_intervalo + saida + saida_ex) - (entrada + entrada_intervalo + entrada_ex);
                }
            } catch (ClassCastException ex) {
                horasTrabalhadas = (saida_intervalo + saida + saida_ex) - (entrada + entrada_intervalo + entrada_ex);
            }

            //horas trabalhadas do dia:
            //horasTrabalhadas = (saida_intervalo + saida + saida_ex) - (entrada + entrada_intervalo + entrada_ex);
            System.out.println("HORAS TRABALHADAS DIA: " + (x + 1) + " HORAS: " + CDbl.CDblDuasCasas(horasTrabalhadas) + " BASE: " + CDbl.CDblDuasCasas(base));
            //verifica se o funcion√°rio fez horas extras

            horasTrabalhadas = CDbl.CDblDuasCasas(horasTrabalhadas);

            if (horasTrabalhadas > base) { // HORAS EXTRAS
                // extra recebe as horas trabalhadas - jornada:
                //System.out.println("EXTRA DIA "+(x+1)+": "+(horasTrabalhadas - base));
                extra += horasTrabalhadas - base;

                //##############calculo noturno#####################//
                double[] horarios = {entrada, saida_intervalo, entrada_intervalo, saida, entrada_ex, saida_ex};
                horarios = calculoNoturno(horarios);
                entrada = horarios[0];
                saida_intervalo = horarios[1];
                entrada_intervalo = horarios[2];
                saida = horarios[3];
                entrada_ex = horarios[4];
                saida_ex = horarios[5];
                horasTrabalhadas = (saida_intervalo + saida + saida_ex) - (entrada + entrada_intervalo + entrada_ex);
                if (horasTrabalhadas > 6.99) {
                    horasTrabalhadas = 7;
                } else if (horasTrabalhadas < 0) {
                    horasTrabalhadas += 29;
                }
                noturna += horasTrabalhadas;
                extra -= horasTrabalhadas;
                //###############fim calculo noturno##############//

            } //verifica se houve horas faltas no dia:
            else if (horasTrabalhadas < base) {
                if (horasTrabalhadas != 0) {
                    falta += base - horasTrabalhadas;
                }
                try {
                    String temp_ = (String) tb.getValueAt(x, 0);
                    if (temp_.equals("F")) {
                        falta += base - horasTrabalhadas;
                    }
                } catch (ClassCastException e) {
                    System.out.println("HORAS<BASE linha 1456");
                }
            }
        }
        //System.out.println(extra);
        txt_horas_extras_50.setText(CDate.decimalPHora(extra, false));
        txt_horas_faltas.setText(CDate.decimalPHora(falta, false));
        txt_horas_noturnas.setText(CDate.decimalPHora(noturna, false));
        txt_reducao_noturno.setText(Double.toString(CDbl.CDblDuasCasas(7.5 / 60 * noturna)));
    }

    private void lancarHorarios() {
        String entradaS, s_intervaloS, e_intervaloS, saidaS, entrada_2S, saida_2S;
        entradaS = txt_entrada.getText();
        s_intervaloS = txt_saida_intervalo.getText();
        e_intervaloS = txt_entrada_intervalo.getText();
        saidaS = txt_saida.getText();
        entrada_2S = txt_entrada_aux.getText();
        saida_2S = txt_saida_aux.getText();
        int diaAtual = (int) dia.getValue();
        double entrada = 0,
                saida_intervalo = 0,
                entrada_intervalo = 0,
                saida = 0,
                entrada_ex = 0,
                saida_ex = 0;
        double horasTrabalhadas = 0;
        //lancar na tabela e setar valores double
        if (!entradaS.equals("  :  ")) {
            tb.setValueAt(entradaS, diaAtual - 1, 1);
            entrada = CDate.horaPDecimal(entradaS);
        }
        if (!s_intervaloS.equals("  :  ")) {
            tb.setValueAt(s_intervaloS, diaAtual - 1, 2);
            saida_intervalo = CDate.horaPDecimal(s_intervaloS);
        }
        if (!e_intervaloS.equals("  :  ")) {
            tb.setValueAt(e_intervaloS, diaAtual - 1, 3);
            entrada_intervalo = CDate.horaPDecimal(e_intervaloS);
        }
        if (!saidaS.equals("  :  ")) {
            tb.setValueAt(saidaS, diaAtual - 1, 4);
            saida = CDate.horaPDecimal(saidaS);
        }
        if (!entrada_2S.equals("  :  ")) {
            tb.setValueAt(entrada_2S, diaAtual - 1, 5);
            entrada_ex = CDate.horaPDecimal(entrada_2S);
        }
        if (!saida_2S.equals("  :  ")) {
            tb.setValueAt(saida_2S, diaAtual - 1, 6);
            saida_ex = CDate.horaPDecimal(saida_2S);
        }
        horasTrabalhadas = (saida_intervalo + saida + saida_ex) - (entrada + entrada_intervalo + entrada_ex);
        //System.out.println("DIA " + diaAtual + ": " + horasTrabalhadas2 + " Horas Extras do dia: " + (horasTrabalhadas2 - 7.33));
        tb.setValueAt(CDate.decimalPHora(horasTrabalhadas, false), diaAtual - 1, 7);
        if (jTable1.getRowCount() > diaAtual) {
            ScroollJTable.selectAndScroll(jTable1, diaAtual);
        }
        limpaCampos();
    }

    private Object jornada() {
        return jornadaString;
    }

    private void limpaCampos() {
        txt_entrada.setText("");
        txt_saida_intervalo.setText("");
        txt_entrada_intervalo.setText("");
        txt_saida.setText("");
        txt_entrada_aux.setText("");
        txt_saida_aux.setText("");
    }

    private void salvar() {
        CartaoPonto cartao = new CartaoPonto();
        cartao.setFuncionario(funcionario);
        cartao.setTabela(tb);
        cartao.setAno(ano);
        cartao.setMes(mes);
        cartao.setDias(tb.getRowCount());
        cartao.setExtra(txt_horas_extras_50.getText());
        cartao.setFalta(txt_horas_faltas.getText());
        cartao.setNoturna(txt_horas_noturnas.getText());
        cartao.setReducao(Double.parseDouble(txt_reducao_noturno.getText()));
        cartao.setJornada(jornadaString);
        List<String[]> list = new ArrayList<>();
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            String[] linha = new String[8];
            for (int i = 0; i < 8; i++) {
                linha[i] = String.valueOf(jTable1.getValueAt(x, i));
            }
            list.add(linha);
        }
        try {
            int registro = new CartaoPontoDAO().nextReg();
            if (new CartaoPontoDAO().salvar(cartao, registro, list)) {
                definirMes();
                JOptionPane.showMessageDialog(this, "Salvo com sucesso!");
                StatusBtn(false);
            } else {
                JOptionPane.showMessageDialog(this, "Algo deu errado! Desfazendo altera√ß√µes no banco de dados...", "Erro", JOptionPane.WARNING_MESSAGE);
                if (!new CartaoPontoDAO().removerAlteracoes(cartao)) {
                    JOptionPane.showMessageDialog(null, "Erro ao tentar remover altera√ß√µes no banco de dados, por favor informe o programador passando as informa√ß√µes do Funcion√°rio, m√™s e ano, para serem removidas manualmente", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void verificarExistente() {
        try {
            this.reg_sub = this.reg = new CartaoPontoDAO().lancado(funcionario, mes, ano);

            CartaoPonto ponto = new CartaoPontoDAO().getLancado(reg, jTable1);
            txt_horas_extras_50.setText(ponto.getExtra());
            txt_horas_faltas.setText(ponto.getFalta());
            txt_horas_noturnas.setText(ponto.getNoturna());
            txt_reducao_noturno.setText(Double.toString(ponto.getReducao()));
            jaLancado = true;
            jornadaString = ponto.getJornada();
            if (ponto.getJornada().equals("07:20")) {
                jornada5.setSelected(false);
                jornada6.setSelected(false);
                jornada7.setSelected(true);
            } else if (ponto.getJornada().equals("06:00")) {
                jornada5.setSelected(false);
                jornada6.setSelected(true);
                jornada7.setSelected(false);
            } else {
                jornada5.setSelected(true);
                jornada6.setSelected(false);
                jornada7.setSelected(false);
            }
            StatusBtn(false);
        } catch (Exception ex) {
            System.out.println(ex);
            this.reg_sub = this.reg = 0;
            jaLancado = false;

            txt_horas_extras_50.setText("");
            txt_horas_faltas.setText("");
            txt_horas_noturnas.setText("");
            txt_reducao_noturno.setText("");
            for (int x = 0; x < jTable1.getRowCount(); x++) { //todas as linhas e colunas ==null (menos a coluna 0)
                for (int i = 1; i < 8; i++) {
                    jTable1.setValueAt(null, x, i);
                }
            }
            StatusBtn(true);
        }
    }

    private void atualizar() {
        CartaoPonto cartao = new CartaoPonto();
        cartao.setFuncionario(funcionario);
        cartao.setTabela(tb);
        cartao.setAno(ano);
        cartao.setMes(mes);
        cartao.setDias(tb.getRowCount());
        cartao.setExtra(txt_horas_extras_50.getText());
        cartao.setFalta(txt_horas_faltas.getText());
        cartao.setNoturna(txt_horas_noturnas.getText());
        cartao.setReducao(Double.parseDouble(txt_reducao_noturno.getText()));
        cartao.setJornada(jornadaString);

        cartao.setReg(reg);
        cartao.setReg_sub(reg_sub);

        List<String[]> list = new ArrayList<>();
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            String[] linha = new String[8];
            for (int i = 0; i < 8; i++) {
                linha[i] = String.valueOf(jTable1.getValueAt(x, i));
                //System.out.print(linha[i]+"\t");
            }
            //System.out.println("");
            list.add(linha);
        }

        if (new CartaoPontoDAO().atualizar(cartao, list)) {
            JOptionPane.showMessageDialog(this, "Atualizado com sucesso!");
            StatusBtn(false);
        } else {
            JOptionPane.showMessageDialog(this, "Algo deu errado!...");
        }
    }

    private void StatusBtn(boolean habilitado) {
        sabadoBtn.setVisible(habilitado);
        domingoBtn.setVisible(habilitado);
        folgaBtn.setVisible(habilitado);
        feriadoBtn.setVisible(habilitado);
        atestadoBtn.setVisible(habilitado);
        faltaBtn.setVisible(habilitado);
        limpaDiaBtn.setVisible(habilitado);
        concluirBtn.setVisible(habilitado);
        txt_entrada.setEnabled(habilitado);
        txt_saida_intervalo.setEnabled(habilitado);
        txt_entrada_intervalo.setEnabled(habilitado);
        txt_saida.setEnabled(habilitado);
        txt_entrada_aux.setEnabled(habilitado);
        txt_saida_aux.setEnabled(habilitado);
        jornada6.setEnabled(habilitado);
        jornada7.setEnabled(habilitado);
        jornada5.setEnabled(habilitado);
        imprimirBtn.setVisible(!habilitado); //contr√°rio
        editbtn.setVisible(!habilitado); //contr√°rio
    }

    private void calcularAproximacao() {
        int domingos = (int) txt_numero_feriados.getValue();
        int totalDias = tb.getRowCount();
        for (int i = 0; i < tb.getRowCount() - 1; i++) {
            try {
                if ("D".equals((String) tb.getValueAt(i, 0))) {
                    domingos++;
                }
            } catch (Exception e) {
            }
        }
        double jornada = CDate.horaPDecimal(jornadaString);
        double horas_mes = jornada * 30;
        try {
            double valor_hora = ((double) txt_salario_base.getValue()) / horas_mes;
            txt_valor_hora.setText(Double.toString(CDbl.CDblDuasCasas(valor_hora)));
            txt_valor_hora_extra.setText(Double.toString(CDbl.CDblDuasCasas(valor_hora) * 1.55));
            double total = valor_hora * horas_mes;
            double extra = 0;
            try {
                extra = CDate.horaPDecimal(txt_horas_extras_50.getText()) + CDate.horaPDecimal(txt_horas_noturnas.getText());
                extra *= Double.parseDouble(txt_valor_hora_extra.getText());
            } catch (Exception e) {
            }
            double dsr = 0;
            try {
                dsr = CDbl.CDblDuasCasas((extra / (totalDias - domingos)) * domingos);
            } catch (Exception i) {
            }
            String horadsr = "00:00";
            if (dsr != 0) {
                double dsrdecimal = dsr / valor_hora;
                horadsr = CDate.decimalPHora(dsrdecimal, false);
            }
            txt_valor_total_Extra.setText(Double.toString(CDbl.CDblDuasCasas(extra)));
            txt_valor_DSR.setText(Double.toString(CDbl.CDblDuasCasas(dsr)));
            txt_hora_DSR.setText(horadsr);
            total += extra + dsr + (double) txt_indenizacao.getValue();
            total -= (double) txt_descontos.getValue();
            double inss = total * (((int) inssSpin.getValue() / (double) 100));
            inss = CDbl.CDblDuasCasas(inss);
            total -= inss;
            txt_valor_total_Salario.setText(Double.toString(CDbl.CDblDuasCasas(total)));
            txt_INSS.setText(Double.toString(inss));
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    public void importCVS() {
        JFileChooser fl = new JFileChooser();
        fl.setDialogTitle("Importar arquivo CSV");
        fl.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo CSV", "csv");
        fl.setFileFilter(filter);
        int op = fl.showOpenDialog(null);
        if (op != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File file = fl.getSelectedFile();
        String arquivoCSV = file.getPath();
        //String arquivoCSV = "C:\\Users\\User\\Desktop\\MAIO-2019.csv";
        BufferedReader br = null;
        String linha = "";
        String csvDivisor = ";";
        int countLinha = 0;
        String[][] tabela = new String[31][7];
        for (int x = 0; x < 31; x++) {
            for (int i = 0; i < 7; i++) {
                tabela[x][i] = "";
            }
        }
        try {
            br = new BufferedReader(new FileReader(arquivoCSV));
            while ((linha = br.readLine()) != null) {
                String[] produto = linha.split(csvDivisor);
                for (int x = 0; x < produto.length; x++) {
                    if (countLinha >= 6 && countLinha <= 36 && x < 7) {
                        tabela[countLinha - 6][x] = produto[x];
                    }
                }
                countLinha++;
            }
            lancarImport(tabela);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException ex) {
                    Logger.getLogger(frmLancarCartaoPonto2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void lancarImport(String[][] tabela) {
        dia.setValue(1);
        for (int x = 0; x < tb.getRowCount(); x++) {
            char situacao = tabela[x][0].toCharArray()[0];
            //System.out.println(situacao);
            boolean verificacao = true;
            switch (situacao) {
                case 'R':
                    folgaBtnActionPerformed(null);
                    verificacao = false;
                    break;
                case 'S':
                    sabadoBtnActionPerformed(null);
                    verificacao = false;
                    break;
                case 'D':
                    if (tabela[x][1].equals("")) {
                        domingoBtnActionPerformed(null);
                        verificacao = false;
                    } else {
                        verificacao = true;
                    }
                    break;
                case 'H':
                    feriadoBtnActionPerformed(null);
                    verificacao = false;
                    break;
                case 'A':
                    if (tabela[x][1].equals("")) {
                        atestadoBtnActionPerformed(null);
                        verificacao = false;
                    } else {
                        verificacao = true;
                    }
                    break;
                case 'F':
                    faltaBtnActionPerformed(null);
                    verificacao = false;
                    break;
            }
            if (verificacao) {
                txt_entrada.setText(verificaStringHorario(tabela[x][1].replaceAll(",", ":")));
                txt_saida_intervalo.setText(verificaStringHorario(tabela[x][2].replaceAll(",", ":")));
                txt_entrada_intervalo.setText(verificaStringHorario(tabela[x][3].replaceAll(",", ":")));
                txt_saida.setText(verificaStringHorario(tabela[x][4].replaceAll(",", ":")));
                txt_entrada_aux.setText(verificaStringHorario(tabela[x][5].replaceAll(",", ":")));
                txt_saida_aux.setText(verificaStringHorario(tabela[x][6].replaceAll(",", ":")));
                lancarDiaImport();
            }
        }
    }

    private void lancarDiaImport() {
        lancarHorarios();
        dia.setValue((int) dia.getValue() + 1);
        txt_entrada.requestFocus();
        calcularHoras();
    }

    private String verificaStringHorario(String temp) {
        temp = temp.trim();
        //System.out.println("e>>>" + temp);
        if ("".equals(temp) || temp == null || "-".equals(temp)) {
            return "  :  ";
        }
        String[] s = temp.split(":");
        if (Integer.parseInt(s[0]) < 10) {     //s[0] = 12 : s[1] = 21
            s[0] = "0" + s[0];
        }
        //System.out.println("s>>" + s[0] + ":" + s[1]);
        return s[0] + ":" + s[1];
    }

    private double[] calculoNoturno(double[] horarios) {
        double entrada, saida_intervalo, entrada_intervalo, saida, entrada_ex, saida_ex;
        entrada = horarios[0];
        saida_intervalo = horarios[1];
        entrada_intervalo = horarios[2];
        saida = horarios[3];
        entrada_ex = horarios[4];
        saida_ex = horarios[5];
        if (saida_ex <= 21.99) {
            if (saida_ex < 5.01) {
                saida_ex += 24;
            } else {
                saida_ex = 0;
            }
        }
        if (entrada_ex <= 21.99) {
            if (entrada_ex < 5.01) {
                entrada_ex += 24;
            } else {
                if (saida_ex > 0) {
                    entrada_ex = 22;
                } else {
                    entrada_ex = 0;
                }
            }
        }
        if (saida <= 21.99) {
            if (saida < 5.01) {
                saida += 24;
            } else {
                saida = 0;
            }
        }
        if (entrada_intervalo <= 21.99) {
            if (entrada_intervalo < 5.01) {
                entrada_intervalo += 24;
            } else {
                if (saida > 0) {
                    entrada_intervalo = 22;
                } else {
                    entrada_intervalo = 0;
                }
            }
        }
        if (saida_intervalo <= 21.99) {
            if (saida_intervalo < 5.01) {
                saida_intervalo += 24;
            } else {
                saida_intervalo = 0;
            }
        }
        if (entrada <= 21.99) {
            if (entrada < 5.01) {
                entrada += 24;
            } else {
                if (saida_intervalo > 0) {
                    entrada = 22;
                } else {
                    entrada = 0;
                }
            }
        }
        horarios[0] = entrada;
        horarios[1] = saida_intervalo;
        horarios[2] = entrada_intervalo;
        horarios[3] = saida;
        horarios[4] = entrada_ex;
        horarios[5] = saida_ex;
        return horarios;
    }

    private void carregarDiaClickado(int i) {
        txt_entrada.setText((String) jTable1.getValueAt(i, 1));
        txt_saida_intervalo.setText((String) jTable1.getValueAt(i, 2));
        txt_entrada_intervalo.setText((String) jTable1.getValueAt(i, 3));
        txt_saida.setText((String) jTable1.getValueAt(i, 4));
        txt_entrada_aux.setText((String) jTable1.getValueAt(i, 5));
        txt_saida_aux.setText((String) jTable1.getValueAt(i, 6));
    }

    private void verificacaoMeiaNoite(String text) {
        if (!"  :  ".equals(text)) {
            double temp = CDate.horaPDecimal(text);
            if (temp > 0 && temp < 3) {
                exibirMensagemHorario();
            }
        }
    }

    private void exibirMensagemHorario() {
        if (infoMensagem) {
            JOptionPane.showMessageDialog(this, "Se o hor√°rio informado for respectivo a outro dia deve-se somar 24Horas"
                    + "\nEx: Entrada: 20:00\nSaida: 02:00 (do outro dia)"
                    + "\nEnt√£o:\nEntrada: 20:00\nSaida: 26:00", "Verifica√ß√£o de Hor√°rio", JOptionPane.WARNING_MESSAGE);
            infoMensagem = false;
        }
    }

    private void cartaoFicticio() {
        CartaoFicticio_JD jd = new CartaoFicticio_JD(this, true);
        jd.setVisible(true);
        if (jd.getValores() != null) {
            dia.setValue(1);
            List<String> valores = jd.getValores();
            Random gerador;
            int variacao = Integer.parseInt(valores.get(4));
            boolean positivo = true;
            double valor = 0;
            for (int x = 0; x < jTable1.getRowCount(); x++) {
                if (jTable1.getValueAt(x, 0) != "D") {
                    for (int i = 0; i < 4; i++) {
                        gerador = new Random();
                        double horaDecimal = CDate.horaPDecimal(valores.get(i));
                        valor = ((double) (gerador.nextInt() % variacao + 1) / 100);
                        positivo = gerador.nextBoolean();
                        if (positivo) {
                            horaDecimal += valor;
                        } else {
                            horaDecimal -= valor;
                        }
                        switch (i) {
                            case 0:
                                txt_entrada.setText(CDate.decimalPHora(horaDecimal, false));
                                break;
                            case 1:
                                txt_saida_intervalo.setText(CDate.decimalPHora(horaDecimal, false));
                                break;
                            case 2:
                                txt_entrada_intervalo.setText(CDate.decimalPHora(horaDecimal, false));
                                break;
                            default:
                                txt_saida.setText(CDate.decimalPHora(horaDecimal, false));
                                break;
                        }
                    }
                    lancarDiaImport();
                } else {
                    dia.setValue((int) dia.getValue() + 1);
                }
            }
        }
    }

    private void SemHorasExtrasEFaltas() {
        String op = JOptionPane.showInputDialog(null, "1 >> Dia Selecionado\n2 >> Todos os dias", "1");
        if (op == null) {
            return;
        } else if (op.equals("")) {
            return;
        }
        try {
            int op_ = Integer.parseInt(op);
            if (op_ < 1 || op_ > 2) {
                return;
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Valor inv√°lido.");
        }
        int op_ = Integer.parseInt(op);
        new Thread(() -> {
            double jornada = CDate.horaPDecimal(jornadaString);
            double hrs_trab = 0;
            double dif_hrs_trab_e_jornada;

            int max_rep = 50;
            int controle_rep = 0;
            for (int x = 0; x < jTable1.getRowCount(); x++) {
                if (jTable1.getValueAt(x, 7) != null) { //horas trabalhadas nao pode ser nulo
                    if (!"00:00".equals((String) jTable1.getValueAt(x, 7))) { //horas trabalhadas nao pode ser 0
                        hrs_trab = CDate.horaPDecimal((String) jTable1.getValueAt(x, 7));
                        while ((hrs_trab != jornada) && controle_rep < max_rep) { //enquanto a linha nao conseguir chegar a 07:20
                            int count = 0;
                            while (count < 10 && (hrs_trab != jornada)) {
                                hrs_trab = CDate.horaPDecimal((String) jTable1.getValueAt(x, 7));
                                dif_hrs_trab_e_jornada = hrs_trab - jornada;

                                if (dif_hrs_trab_e_jornada != 0) {

                                    jTable1.setRowSelectionInterval(x, x);
                                    jSpinnerDia.setValue(x + 1);
                                    carregarDiaClickado(x);

                                    if (dif_hrs_trab_e_jornada > 0.01) {
                                        txt_saida.setText(CDate.decimalPHora(CDate.horaPDecimal(txt_saida.getText()) - 0.01, false));
                                        lancarDiaImport();
                                    } else if (dif_hrs_trab_e_jornada < 0.01) {
                                        txt_saida.setText(CDate.decimalPHora(CDate.horaPDecimal(txt_saida.getText()) + 0.01, false));
                                        lancarDiaImport();
                                    }
                                }
                                count++;
                                try {
                                    Thread.sleep(2);
                                } catch (Exception e) {

                                }
                            }
                            if (count == 10) {
                                jTable1.setRowSelectionInterval(x, x);
                                jSpinnerDia.setValue(x + 1);
                                carregarDiaClickado(x);
                                txt_entrada_intervalo.setText(CDate.decimalPHora(CDate.horaPDecimal(txt_entrada_intervalo.getText()) - 0.005, false));
                                lancarDiaImport();
                            }
                            controle_rep++;
                        }
                        controle_rep = 0;
                    }
                }
            }
        }).start();
    }

    private void imprimir() {
        Connection conn = ConnectionFactory.getConnection();
        //String src = "C:\\JCR\\RELATORIOS DESPESA\\CartaoPontojs.jasper";
        String src = "src/jaspers/CartaoPontojs.jasper";
        JasperPrint js = null;
        try {
            HashMap<String, Object> map = new HashMap<>();
            map.put("cdfun", funcionario.getCodigo());
            map.put("anofun", ano);
            map.put("mesfun", mes);
            String fer = "";
            if (!feriados.isEmpty()) {
                for (FeriadosBrasil f : feriados) {
                    String temp = (String) jTable1.getValueAt(f.getDia() - 1, 7);
                    String situacao = "";
                    try {
                        situacao = (String) jTable1.getValueAt(f.getDia() - 1, 0);
                    } catch (Exception e) {
                        situacao = "";
                    }
                    //n√£o pode ser nulo, nen horas trabalhadas = 00:00 nem Atestado
                    if (temp != null && !"00:00".equals(temp) && !"A".equals(situacao)) {
                        fer += "‚úî " + f.toString() + "\n";
                    } else {
                        fer += "‚úñ " + f.toString() + "\n";
                    }
                }
            }
            System.out.println(fer);
            map.put("feriados", fer);
            js = JasperFillManager.fillReport(src, map, conn);
        } catch (JRException e) {
            JOptionPane.showMessageDialog(null, "Erro:" + e.getMessage());
        }
        JasperViewer vw = new JasperViewer(js, false);
        vw.setTitle("Cart√£o Ponto");
        vw.setVisible(true);
        ConnectionFactory.closeConnection(conn);
    }
    
    
    
}
